<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julia Piaskowski</title>
    <link>/authors/admin/</link>
      <atom:link href="/authors/admin/index.xml" rel="self" type="application/rss+xml" />
    <description>Julia Piaskowski</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 01 Feb 2020 10:50:02 -0700</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Julia Piaskowski</title>
      <link>/authors/admin/</link>
    </image>
    
    <item>
      <title>Star Wars and Bad Data Management</title>
      <link>/post/starwars_bad_data/</link>
      <pubDate>Sat, 01 Feb 2020 10:50:02 -0700</pubDate>
      <guid>/post/starwars_bad_data/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genomic heritability estimates in sweet cherry reveal non-additive genetic variance is relevant for industry-prioritized traits.</title>
      <link>/publication/cherry_gebv/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/publication/cherry_gebv/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Near-infrared calibration of soluble stem carbohydrates for predicting drought tolerance in spring wheat</title>
      <link>/publication/nir_calib/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/publication/nir_calib/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prediction of Genetic Value for Sweet Cherry Fruit Maturity among Environments Using a 6K SNP Array.</title>
      <link>/publication/sweet_cherry_maturity/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/publication/sweet_cherry_maturity/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Quantitative Trait Loci for Cold Tolerance in Chickpea.</title>
      <link>/publication/chickpea_qtl_cold/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/publication/chickpea_qtl_cold/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Crossing the finish line: how to develop diagnostic DNA tests as breeding tools after QTL discovery</title>
      <link>/publication/dna_testing/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/publication/dna_testing/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How to Set Up a Virtual Machine for Data Analysis If You Are an IT Admin Noob</title>
      <link>/post/vm_wsu/</link>
      <pubDate>Sun, 18 Mar 2018 10:50:02 -0700</pubDate>
      <guid>/post/vm_wsu/</guid>
      <description>&lt;h2 id=&#34;basic-info&#34;&gt;Basic Info&lt;/h2&gt;
&lt;p&gt;I came back from PAG (Plant &amp;amp; Animal Genome - a huge ag genetics conference held in San Diego each January) all fired about setting up a virtual machine (VM) to facilitate collaboration. The hope what this would enable us to share files and scripts better (without the aid of countless dropboxes everyone forgets about), and improve overall collaboration.&lt;/p&gt;
&lt;p&gt;I had considered this before - enterprise deployment of RStudio server or Jupyter hub, but our program doesn’t have dedicated IT support to do this, and frankly, it all seemed rather intimidating to a plant geneticist like me. But this would be useful. I had once run my laptop on dual boot with Ubuntu and Windows. I could handle this, couldn’t I? All I want is a VM that everyone can access via remote desktop for their analytical needs. Fortunately, I had no idea how difficult this would be, or I might not have entered the lion’s den. So, here are fruits of my labor in the hopes it will ease the process for future users. This guide was developed specific for Washington State University&#39;s College of Agriculture, Human and Natural Resource Sciences (CAHNRS).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;  Request a virtual machine. I used the 
&lt;a href=&#34;https://it.cahnrs.wsu.edu/service-catalog/vm-hosting/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;CAHNRS webform&lt;/strong&gt;&lt;/a&gt;
. I went with CentOS 7 - a Linux distribution that had been recommended to me as “full featured” (this remains to be seen). This step may take a few weeks.&lt;/p&gt;
&lt;p&gt;It helps to know exactly what you want to do so CAHNRS IT can properly set up the VM and “rules” (exceptions to their standing rules) to allow you to do the work you want. Running RStudio server means having at least one port open. The RStudio Server default port is 8787 (although than can be easily changed). Remote desktop needs port 3350 open. Jupyter Hub will have its own conventions - all described in their documentation. I recommend you consult the documentation for what you want &lt;em&gt;before&lt;/em&gt; ordering a VM.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Download the 
&lt;a href=&#34;https://its.wsu.edu/ssl-vpn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;WSU VPN client&lt;/strong&gt;&lt;/a&gt;
. Whoever is the admin will need have the WSU SSLVPN to tunnel in through a secure connection in order to do any work remotely. This is the probably the easiest step of the entire process. Who doesn’t love point-and-click installations?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Download software for SSH. Initially, you will need an SSH program to connect through secure, encrypted tunnel. 
&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Putty&lt;/strong&gt;&lt;/a&gt;
 is a popular option. I like secure shell, which I found 
&lt;a href=&#34;https://www.wm.edu/offices/it/services/software/licensedsoftware/webeditingsftp/sshsecureshell/index.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;
. This is actually a rather convenient way to manage the VM, so its utility will likely stretch past the setup phase.&lt;/p&gt;
&lt;h2 id=&#34;general-linux-notes&#34;&gt;General Linux notes:&lt;/h2&gt;
&lt;p&gt;This is CentOS, an alternative distribution to its more popular relative, Ubuntu. While most commands are the same across Linux distributions, some things are a little different. FYI, Centos is similar to .rhel and Red Hat if you are combing forums for help.&lt;/p&gt;
&lt;p&gt;Check out these 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;standards for Linux filesystems&lt;/strong&gt;&lt;/a&gt;
. It will help you understand how the machine is organized. Don’t spend too much time here; it’s more of a reference than pleasure reading.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.centos.org/docs/5/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;The Centos documentation&lt;/strong&gt;&lt;/a&gt;
 can be helpful, as well.&lt;/p&gt;
&lt;h3 id=&#34;miscellaneous-useful-commands&#34;&gt;Miscellaneous useful commands:&lt;/h3&gt;
&lt;p&gt;Most of the command listed here for VM setup require root privileges, which can be accomplished with “sudo”. You’ll find you need to be root 98% of time during VM setup, so do this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo su&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This changes the console from:
&lt;code&gt;$ &lt;/code&gt;
to:
&lt;code&gt;#   &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use Ctrl-D to leave root. And be careful when you are root!&lt;/p&gt;
&lt;p&gt;Print current working directory:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change the working directory to go up a level:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd .. &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Absolute path (will work everywhere):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cd /&amp;lt;path&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Relative path (only sees child directories):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This produces a long list of all files and directories in your current working directory:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ll -a&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To see options associated with a particular command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;command&amp;gt; --help&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To remove a single file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rm &amp;lt;your_file.txt&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To remove an entire directory:&lt;br&gt;
‘r’ does it recursively&lt;br&gt;
‘f’ will do it without asking again (it skips the step that is essentially asking “are you sure you want to delete this????”)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rm -rf &amp;lt;your_directory&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To install a piece of software for all users:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install &amp;lt;library&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To view files:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;more &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To edit files. This command requires sudo for most of the files you will need to look at for VM setup.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;There’s also the vim editor, but use it your own risk. Here is the best description I have ever read of it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“If you want an outstanding free text editor and don&#39;t mind a seemingly vertical learning curve plus long days of pain and suffering while all your neural pathways are rewired, try Vim.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;vi &amp;lt;file&amp;gt; &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To escape vim:&lt;/p&gt;
&lt;p&gt;&lt;code&gt; :q &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a new directory:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mkdir &amp;lt;dir_name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Setting your VM to the correct timezone (Pacific in this case). It is helpful to have the correct time when you are inspecting the logs during troubleshooting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;timedatectl set-timezone &#39;America/Los_Angeles&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;managing-users&#34;&gt;Managing Users&lt;/h3&gt;
&lt;p&gt;It is important to think thru how to organize the users into groups and create folders with shared permissions in order to enable collaboration.&lt;/p&gt;
&lt;p&gt;Below are some common commands. Note that they all require root or sudo access. Centos provides excellent 
&lt;a href=&#34;https://www.centos.org/docs/5/html/Deployment_Guide-en-US/s1-users-tools.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt;
 on this.&lt;/p&gt;
&lt;p&gt;Add a new user (the second option adds a new user to an existing group):&lt;br&gt;
&lt;code&gt;useradd &amp;lt;username&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;useradd &amp;lt;username&amp;gt; -g &amp;lt;groupname&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Set user password:&lt;br&gt;
&lt;code&gt;passwd &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add a group:&lt;br&gt;
&lt;code&gt;groupadd &amp;lt;groupname&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add an existing user to an existing group:&lt;br&gt;
&lt;code&gt;sudo usermod -a -G &amp;lt;groupname&amp;gt; &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable file ownership by a group:&lt;br&gt;
&lt;code&gt;chown :&amp;lt;groupname&amp;gt; &amp;lt;path/to/directory&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enable file ownership by a user:&lt;br&gt;
&lt;code&gt;chown :&amp;lt;username&amp;gt; &amp;lt;path/to/directory&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Delete a user:&lt;br&gt;
&lt;code&gt;userdel &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Link directories:&lt;br&gt;
&lt;code&gt;ln -s &amp;lt;path/to/file&amp;gt; &amp;lt;path/to/link&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;if-you-want-to-run-remote-desktop&#34;&gt;If you want to run remote desktop:&lt;/h2&gt;
&lt;p&gt;There are other desktop environments, but Gnome is a popular one, so why not?&lt;/p&gt;
&lt;p&gt;See what is available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum group list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install Gnome desktop environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install gnome
sudo yum install gnome desktop environment
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check that it is running&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ps -aux | grep gnome
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install and configure the EPEL repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the nux repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install xrdp:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum -y install xrdp tigervnc*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You’ll need to start xrdp and xrdp-sesman (“session manager”) as a service (so they are always running) and enable them both to autostart:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl start xrdp
sudo systemctl enable xrdp
sudo systemctl start xrdp-sesman
sudo systemctl enable xrdp-sesman
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And check:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl status xrdp
sudo systemctl status xrdp-sesman
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These should indicate that xrdp and xrdp-sesman are &lt;em&gt;active&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Open a port to allow remote desktop connections:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo firewall-cmd --permanent --zone=public --add-port=3389/tcp
sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Configure SELinux:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chcon --type=bin_t /usr/sbin/xrdp
sudo chcon --type=bin_t /usr/sbin/xrdp-sesman
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And check that the port is open:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;netstat -plan | grep xrdp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, vnc has to be started. It is tied to a user, so get out of root if you are there (and don’t use sudo).&lt;/p&gt;
&lt;p&gt;Set a password:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vncpasswd -&amp;lt;user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will return a prompt, asking you for a password. This is what you will use for remote desktop. You can definitely skip the  step of having a read-only password by answering “n” for no. (It’s unclear to me why anyone would want a password for that as opposed to whole new user account with read-only permissions, but what do I know?).&lt;/p&gt;
&lt;p&gt;Next, start the server. Try to only do this once.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnc server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you end up with multiple vnc server instances running on just ONE user account, kill the extra processes and delete their log files. Here are the steps:&lt;/p&gt;
&lt;p&gt;First, find the process ID’s:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ps aux | grep vnc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The process ID&#39;s (pid) are located in the second column from the left. Kill the extra vnc pid&#39;s:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kill -9 &amp;lt;pid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Find the associated files and delete them. I found there here:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /var/log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;They will have names like &amp;ldquo;Xorg.9.log&amp;rdquo;.&lt;/p&gt;
&lt;h3 id=&#34;troubleshooting-remote-desktop&#34;&gt;Troubleshooting Remote Desktop&lt;/h3&gt;
&lt;p&gt;If you run into trouble, try disabling SELinux:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo setenforce 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;getenforce
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(it should say “permissive” NOT “enforcing)&lt;/p&gt;
&lt;p&gt;Check for problems (as root):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /var/logs
more xrdp.log
more xrdp-sesman.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are cleared rapidly and folded into the xrdp .tar files, so do not be alarmed if the log files are empty. If you really want to see something in the xrdp logs, stop and restart xrdp.&lt;/p&gt;
&lt;p&gt;The most useful file is the messages file, but it’s very long, so just show the end:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo tail -55 messages
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you &lt;em&gt;really&lt;/em&gt; want to see what&#39;s going on, watch the file in real time:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail -f messages&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ctlr-C to leave&lt;/p&gt;
&lt;p&gt;The firewalld file in the /var/log/ directory is stuffed with known, but currently unresolved bugs so it’s not very useful for diagnosing problems at this time.&lt;/p&gt;
&lt;p&gt;There&#39;s a number of remote desktop applications which can be used to access the VM. Windows RDP is easy to use and secure.&lt;/p&gt;
&lt;h3 id=&#34;run-r-in-remote-desktop&#34;&gt;Run R in remote desktop&lt;/h3&gt;
&lt;p&gt;Start by installing R. WSU would not let me access the internet directly from the remote desktop internet browser, but I could through the SSH. So here are command line instructions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install epel-release
sudo yum update
sudo yum install R -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, install RStudio. Get current link from the 
&lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio website&lt;/strong&gt;&lt;/a&gt;
. The link below worked March 19, 2018:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://download1.rstudio.org/rstudio-1.1.442-x86_6
sudo rpm -Uvh rstudio-1.1.442-x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt;
&lt;p&gt;It&#39;s also helpful to have an office suite&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install libreoffice
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, all done! Go and solve the world’s problems!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I learned at the UseR! conference</title>
      <link>/post/user_2018/</link>
      <pubDate>Sun, 18 Mar 2018 10:50:02 -0700</pubDate>
      <guid>/post/user_2018/</guid>
      <description>&lt;h4 id=&#34;top-lessons-from-r-users-conference-held-july-10---13-in-brisbane-aus&#34;&gt;Top Lessons from R users conference held July 10 - 13 in Brisbane, AUS&lt;/h4&gt;
&lt;p&gt;With 900 registrants and dozens of talks, there is much to report (
&lt;a href=&#34;https://www.youtube.com/channel/UC_R5smHVXRYGhZYDJsnXTwg/videos&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;videos of most talks&lt;/a&gt;
 provided by R Consortium YouTube channel) I&#39;ll skip loads of it and just focus on the top 10 cool stuff.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The hex wall was just straight up cool. Here&#39;s the 
&lt;a href=&#34;https://blog.mitchelloharawild.com/blog/user-2018-feature-wall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code for that&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I participated in a half day workshop on Rcpp (
&lt;a href=&#34;https://www.youtube.com/watch?v=FZ0LcJbxPF0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
 and 
&lt;a href=&#34;https://www.youtube.com/watch?v=EXGhR-kyjRg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
). This continues to be a very popular suite of packages to help users increase the speed and efficiency of their programs. I say &amp;ldquo;suite&amp;rdquo; because in addition to 3 major functions provided by Rcpp, a number of accessory packages have been written to extend its functionality. Several of these accessory packages essentially are providing templates for invoking C++ commands without having to actually know C. Dirk Eddelbuttel introduced the 3 major functions for extending R with C/C++:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;evalCpp: for evaluating ad hoc anonymous expressions&lt;/li&gt;
&lt;li&gt;cppFunction: standard function written in C/C++ and invoked in a program&lt;/li&gt;
&lt;li&gt;sourceCpp: source C/C++ objects &amp;amp; functions from external file
These functions must be compiled each time a fresh R session is started. Building an Rcpp package avoids this and is easy to do:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Rcpp.package.skeleton(&amp;quot;mypackage&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;The other useful workshop I participated in was methods for speeding up R, delivered by Thomas Lumley, formerly of UW and now of U of Auckland. He focused on a few major recommendations:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vectorise whenever possible. This also implies that you know your vectorised functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lapply/apply/sapply/vapply/tapply&lt;/li&gt;
&lt;li&gt;rowMeans, rowSums&lt;/li&gt;
&lt;li&gt;colMeans, colSums&lt;/li&gt;
&lt;li&gt;Consider parallelised functions: mclapply&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Base functions are often designed to handle wildly different input. It may make sense in some instances to rewrite functions, making assumptions (e.g. about the input data) that fit your circumstances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data frames should be avoided if possible - they are expensive to create and often copied in whole when modified.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using an optimized matrix algebra library (not LAPACK) may be worth the time to install that. These libraries have optimized how data is accessed from disk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some rec&#39;s on how to handle large objects that reasonably don&#39;t fit in memory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buy a computer with more memory (not always a reasonable option)&lt;/li&gt;
&lt;li&gt;put your data in database and access with tools like dbplyr. One recommendation is MonetDBLite, a column-optimized database good for scientific applications for that reason.&lt;/li&gt;
&lt;li&gt;Use special file formats for bigger data sets: HDF5, GitLFS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;But, first and foremost, he emphasized the use of profiling tools and benchmarking functions. find out where the bottleneck in your program actually are! And be careful to not waste too much time on optimizing code - time saved may not be worth time invested. R is automatically running a JIT (just in time) compiler that makes code run faster each time it is called. It makes sense to turn this off while doing benchmarking:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;enableJIT(0)

# to turn back on:

enableJIT(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Course notes available on his github repo 
&lt;a href=&#34;https://github.com/tslumley/useRfasteR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UseRfasteR&lt;/a&gt;
.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Excellent keynotes all-around. 
&lt;a href=&#34;https://www.youtube.com/watch?v=27FxbDtCFoc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Steph da Silva&lt;/a&gt;
 emphasized the importance of &lt;em&gt;community&lt;/em&gt; in open-source community - what that can look like, how to contribute  how your contribution helps develop camaraderie to support sharing of code and development of analysts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=5033jBHFiHE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roger Peng discussed development of R&lt;/a&gt;
 as it strives to fit both programmers and regular ole scientists analyzing their data. He summarized his own talk quite well in this essay. He described the rise of &amp;ldquo;worse is better&amp;rdquo;, that is, the simplying of options in R to make it easier for new users to learn. The tidyverse is considered such an example. However, as a long-time user, I find dplyr&#39;s group-and-summarise options (among others) to be incredibly handy. And I will never go back to using reshape() now that we have gather() and spread(). Even reshape2() is a massive improvement in usability!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenny Bryan&#39;s talk on 
&lt;a href=&#34;https://youtu.be/7oyiPBjLAWY&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Code Smells and Feels&amp;rdquo;&lt;/a&gt;
 provided a great introduction to how to identify and fix poorly written code. According to 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Code_smell&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&lt;/a&gt;
, &amp;ldquo;Code smells are usually not bugs; they are not technically incorrect and do not prevent the program from functioning. Instead, they indicate weaknesses in design that may slow down development or increase the risk of bugs or failures in the future.&amp;rdquo;
Based on the book, &lt;em&gt;Refactoring: Improving the Design of Existing Code&lt;/em&gt;, she gave a few simple directives to create simple code that is easy to understand, debug, and maintain. Hooray!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Hoist entry or exit conditionals to the top of functions&lt;/li&gt;
&lt;li&gt;Use functions as much as possible&lt;/li&gt;
&lt;li&gt;Avoid overly nested code (e.g. a long cascade of nested &amp;ldquo;if&amp;rdquo; statements)&lt;/li&gt;
&lt;li&gt;Not every &amp;ldquo;if&amp;rdquo; needs an else&lt;/li&gt;
&lt;li&gt;Consider implementing true object-oriented programming when working with classes&lt;/li&gt;
&lt;li&gt;Don&#39;t&amp;rsquo; be afraid to write short helper functions
There was also a brief discussion on how to tell a person their code smells bad (&amp;ldquo;that&#39;s what we have funny names like &amp;lsquo;excessive use of literals&amp;rsquo;&amp;quot;).&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Excellent set of talks on data handling and workflow. In particular, 
&lt;a href=&#34;https://www.youtube.com/watch?v=GrqM2VqIQ20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;a talk on the website builder&lt;/a&gt;
 for documenting data analysis called 
&lt;a href=&#34;https://github.com/jdblischak/workflowr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;workflowr&amp;rdquo;&lt;/a&gt;
. 
&lt;a href=&#34;https://www.youtube.com/watch?v=IYfZ6kd7aT0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Discussion on consistent workflows&lt;/a&gt;
, recommended conventions for naming variables, creating consistent set of directories for each project, using version controls. Obvious to a data scientist, but rarely used by regular scientist. This resonates strongly with me due to ongoing issues with data management in the agricultural sciences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=3Bu7QUxzIbA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Excellent talk on precision in R&lt;/a&gt;
. Use .Machine to find out more, but basically R is only good to 16 decimal points. Subtraction of one number similar to it can result in cancellation where the result essentially slides to zero, losing precision. Ways to avoid this include working in log space, perhaps adding a zero if needed: log(x + 1), -log(1 - exp(x)). Also, there is the 
&lt;a href=&#34;https://cran.r-project.org/web/packages/Rmpfr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rmpfr package&lt;/a&gt;
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=XQmBcpQl8K8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Glue package&lt;/a&gt;
 - for &amp;ldquo;gluing&amp;rdquo; strings to data, like string interpolation in bash (&amp;ldquo;$&amp;rdquo;) or python f&amp;rdquo;{&amp;hellip;}&amp;quot;. R does have sprintf() with with identical functionality to C&#39;s printf(), but glue makes this easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=L6FawdEA3W0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fun talk on vwline package&lt;/a&gt;
 for creating variable-width lines, like in Menaurd&#39;s famous plot of Napolean&#39;s march through Russia.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;./napoleon.jpg&#34; alt=&#34;napolean_plot&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perennial wheat lines have highly admixed population structure and elevated rates of outcrossing</title>
      <link>/publication/perennial_wheat/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      <guid>/publication/perennial_wheat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Building supportive networks among agricultural innovators through a symposium on dryland organic farming</title>
      <link>/publication/networks/</link>
      <pubDate>Fri, 01 Mar 2013 00:00:00 +0000</pubDate>
      <guid>/publication/networks/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
